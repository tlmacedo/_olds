"""
Django settings for ftp_mircs project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

with open(os.path.join(BASE_DIR, 'secrets.json')) as secrets_file:
    secrets_json = json.load(secrets_file)


def get_secret(setting):
    return secrets_json[setting]


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_secret('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'mircentrosul.com.br',
    'www.mircentrosul.com.br',
    '127.0.0.1',
    'localhost',
]

# Application definition

LOCAL_APPS = [

]

DEFAULTS_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    'django_settings_export',
    'django_smtp_ssl',
]

INSTALLED_APPS = LOCAL_APPS + DEFAULTS_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'setup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django_settings_export.settings_export',
            ],
        },
    },
]

WHATS_LINK_API = get_secret('WHATS_LINK_API')
WHATS_B_PHONE = get_secret('WHATS_B_PHONE')
WHATS_B_MSG = get_secret('WHATS_B_MSG')

WHATS_BUSINESS = WHATS_LINK_API + "?phone=" + WHATS_B_PHONE + "&text=" + WHATS_B_MSG
WHATS_BUSINESS_WITHOUT_MSG = WHATS_LINK_API + "?phone=" + WHATS_B_PHONE + "&text="

WHATS_BUSINESS_BITLY = get_secret('WHATS_BUSINESS_BITLY')
WHATS_APP_BITLY = get_secret('WHATS_APP_BITLY')

TELEFONE = get_secret('TELEFONE')
ABERTO_SEMANA = get_secret('ABERTO_SEMANA')
ABERTO_FIM_SEMANA = get_secret('ABERTO_FIM_SEMANA')

SETTINGS_EXPORT = [
    'WHATS_LINK_API',
    'WHATS_B_PHONE',
    'WHATS_B_MSG',
    'WHATS_BUSINESS',
    'WHATS_BUSINESS_WITHOUT_MSG',
    'WHATS_BUSINESS_BITLY',
    'WHATS_APP_BITLY',

    'TELEFONE',
    'ABERTO_SEMANA',
    'ABERTO_FIM_SEMANA',
]

EMAIL_BACKEND = get_secret('EMAIL_BACKEND')
EMAIL_USE_TLS = True
EMAIL_HOST = get_secret('EMAIL_HOST')
DEFAULT_FROM_EMAIL = get_secret('DEFAULT_FROM_EMAIL')
EMAIL_HOST_USER = get_secret('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = get_secret('EMAIL_HOST_PASSWORD')
EMAIL_PORT = get_secret('EMAIL_PORT')

FACEBOOK_ACCESS_TOKEN = get_secret('FACEBOOK_ACCESS_TOKEN')

# PHONENUMBER_DB_FORMAT = 'NATIONAL'  # 'E164' #'+41524204242'
# PHONENUMBER_DEFAULT_REGION = 'BR'


WSGI_APPLICATION = 'setup.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',

        "NAME": get_secret('NAME'),
        "USER": get_secret('USER'),
        "PASSWORD": get_secret('PASSWORD'),
        "HOST": get_secret('HOST'),
        "PORT": get_secret('PORT'),

        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Manaus'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

STATIC_URL = '/static/'

STATIC_ROOT = '/home/mircentrosul/www/static'

# LOGIN_REDIRECT_URL = 'login'
# LOGOUT_REDIRECT_URL = 'login'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
